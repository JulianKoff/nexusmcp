version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    image: nexusmcp:latest
    restart: always
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - DATABASE_URL=postgresql://nexusmcp:${DB_PASSWORD}@db:5432/nexusmcp?pool_size=20&max_overflow=10
      - REDIS_HOST=redis-sentinel
      - REDIS_PORT=26379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=INFO
    depends_on:
      - db
      - redis-sentinel
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - nexusmcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=nexusmcp
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=nexusmcp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nexusmcp-network
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexusmcp"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-master:
    image: redis:7
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - nexusmcp-network
    volumes:
      - redis_data:/data

  redis-replica:
    image: redis:7
    command: redis-server --slaveof redis-master 6379 --requirepass ${REDIS_PASSWORD}
    depends_on:
      - redis-master
    deploy:
      replicas: 2
    networks:
      - nexusmcp-network

  redis-sentinel:
    image: redis:7
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - ./config/sentinel.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis-master
      - redis-replica
    networks:
      - nexusmcp-network
    deploy:
      replicas: 3

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - nexusmcp-network

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - nexusmcp-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - nexusmcp-network
    deploy:
      replicas: 2

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  nexusmcp-network:
    driver: overlay 